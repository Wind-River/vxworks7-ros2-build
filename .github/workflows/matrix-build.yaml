name: Matrix ROS 2 VxWorks Build

on:
  workflow_dispatch:
    inputs:
      json_file_name:
        description: 'Build Config JSON File'
        required: true
        default: 'vxros2build-qemu.json'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distro: [humble, iron, rolling]

    steps:
      - name: Checks-out a branch ${{ github.ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Fetch SDK name from ${{ env.json_file }}
        run: |
          sdk=$(jq -r --arg distro "${{ matrix.ros_distro }}" '.vxros2build[] | select(.ros_distro == $distro) | .sdk' .github/workflows/${{ github.event.inputs.json_file_name }})
          if [ -z "$sdk" ]; then
            echo "SDK not found for ${{ matrix.ros_distro }}. Stopping workflow."
            echo "::error::SDK not found for ${{ matrix.ros_distro }}"
            exit 1
          fi
          echo "sdk=$sdk" >> $GITHUB_ENV

      - name: Get Workflow ID
        id: get_workflow_id
        run: |
          workflowPath=".github/workflows/vxworks-ros2-build.yaml"
          workflowContent=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/contents/$workflowPath")
          workflowID=$(echo "$workflowContent" | jq -r '.content' | base64 -d | yq -r '.on.workflow_dispatch.inputs.workflow_id')
          echo "::set-output name=workflow_id::$workflowID"

      - name: Trigger VxWorks ROS 2 ${{ matrix.ros_distro }} build
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ steps.get_workflow_id.outputs.workflow_id }}',
              ref: 'refs/heads/two-workflows',
              inputs: {
                sdk: '${{ env.sdk }}',
                ros_distro: '${{ matrix.ros_distro }}'
              }
            });
 
